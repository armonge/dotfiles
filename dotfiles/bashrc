#
# ~/.bashrc
#

# If not running interactively, don't do anything
[[ $- != *i* ]] && return

# open new tabs in same directory
source /etc/profile.d/vte.sh

# Clojure
source /etc/profile.d/clojure.sh
source /usr/share/bash-completion/completions/lein
export LEIN_JAVA_CMD="$HOME/bin/drip"

# fuck
eval $(thefuck --alias)

# Anaconda
#source /opt/anaconda/bin/activate root

# history
shopt -s histappend
HISTSIZE=5000
HISTFILESIZE=10000

# fix issue on terminal resize
shopt -s checkwinsize

# Language
# I want some german, but my terminal needs english :P
export LANG=en_US.UTF-8

# Alias
alias subdl='subdl --lang="spa"'
alias ls='ls --color=auto'
alias ll='exa -la'
alias ls='exa'
alias vi='nvim'
alias grep='grep --color=auto'
alias serve='python2 -m SimpleHTTPServer'
alias open='xdg-open'
alias dotnet='TERM=xterm dotnet'
alias func="TERM=xterm func"
alias pwsh="TERM=xterm pwsh"
alias cat='bat'
alias ping='prettyping --nolegend'
alias help='tldr'
alias df='pydf'
alias pacman='pacman --color=always'
alias less='less -R'
alias vim="nvim"
alias ftp='lftp'
alias wget='aria2c'
alias java='drip'
alias dmesg='dmesg -H'
# Makes xclip work with vim
alias xclip='xclip -selection c'

# Your dotdrop git repository location
export DOTREPO="$HOME/dotfiles"

alias dotdrop="$DOTREPO/dotdrop.sh"
alias dotgit="git -C $DOTREPO"
alias dotsync="dotgit pull && dotgit add -A && dotgit commit && dotgit push; dotdrop install"

# This is github hub command
eval "$(hub alias -s)"
source /usr/share/bash-completion/completions/hub

# bat cat replacement
export BAT_THEME="Monokai Extended"

# python
export PATH=$PATH:$HOME/.local/bin

# VIM
export VISUAL="nvim -u NONE"
export EDITOR="nvim -u NONE"

# GO
export GOPATH=$(go env GOPATH)
export PATH=$PATH:$(go env GOPATH)/bin

# Azure Storage Explorer
export PATH=$HOME/bin/StorageExplorer:$PATH

# Azure Functions Cli
export PATH=$HOME/bin/azure-functions-cli:$PATH

# Oni
export PATH=$HOME/bin/Oni:$PATH

# Android
export ANDROID_HOME=$HOME/Android/Sdk
export PATH=$ANDROID_HOME/platform-tools:$ANDROID_HOME/tools:$PATH

# Android Studio
export PATH=$HOME/bin/android-studio/bin:$PATH

# Rust
export PATH=$HOME/.cargo/bin:$PATH

# git
source /usr/share/git/completion/git-completion.bash
source /usr/share/git/completion/git-prompt.sh
export GIT_PS1_SHOWCOLORHINTS=1
export GIT_PS1_SHOWUPSTREAM="auto"
export GIT_PS1_SHOWUNTRACKEDFILES=1
export GIT_PS1_SHOWSTASHSTATE=1
export GIT_PS1_SHOWDIRTYSTATE=1

PS1='[\u@\h \W$(__git_ps1 " (%s)")]\$ '
enter_directory() {
  if [ "$PWD" != "$PREV_PWD" ]; then
    PREV_PWD="$PWD"
    if [ -e ".nvmrc" ]; then
      nvm use
    fi

    if [ -e ".bashenv" ]; then
      source ".bashenv"
    fi
  fi
  __git_ps1 "\\u@\\h:\\W" "\\\$ "
}

export PROMPT_COMMAND="${PROMPT_COMMAND:+$PROMPT_COMMAND ;} enter_directory"

# gitignore.io
function gi() { curl -L -s https://www.gitignore.io/api/$@; }

# ~/bin
export PATH="$HOME/bin:$PATH"
export PATH="$HOME/.yarn/bin:$HOME/.config/yarn/global/node_modules/.bin:$PATH"
export PATH="$HOME/.gem/ruby/2.6.0/bin:$PATH"

# Django
source $HOME/bin/django_bash_completion

export NVM_DIR="$HOME/.nvm"
[ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh" # This loads nvm

# jmeter
export PATH=$HOME/bin/apache-jmeter-3.2/bin:$PATH

# tabtab source for serverless package
# uninstall by removing these lines or running `tabtab uninstall serverless`
[ -f /home/armonge/.config/yarn/global/node_modules/serverless/node_modules/tabtab/.completions/serverless.bash ] && . /home/armonge/.config/yarn/global/node_modules/serverless/node_modules/tabtab/.completions/serverless.bash
# tabtab source for sls package
# uninstall by removing these lines or running `tabtab uninstall sls`
[ -f /home/armonge/.config/yarn/global/node_modules/serverless/node_modules/tabtab/.completions/sls.bash ] && . /home/armonge/.config/yarn/global/node_modules/serverless/node_modules/tabtab/.completions/sls.bash
# The next line updates PATH for the Google Cloud SDK.
if [ -f '/home/armonge/bin/google-cloud-sdk/path.bash.inc' ]; then source '/home/armonge/bin/google-cloud-sdk/path.bash.inc'; fi

# The next line enables shell command completion for gcloud.
if [ -f '/home/armonge/bin/google-cloud-sdk/completion.bash.inc' ]; then source '/home/armonge/bin/google-cloud-sdk/completion.bash.inc'; fi

# FZF
source /usr/share/fzf/key-bindings.bash
source /usr/share/fzf/completion.bash
export FZF_DEFAULT_COMMAND='ag --follow --nocolor --filename-pattern "" --hidden --ignore ".git/*"'

# Snap
export PATH="$PATH:/var/lib/snapd/snap/bin"
export PATH="$PATH:/opt/mssql-tools/bin"

# Wey
export PATH="$PATH:$HOME/bin/wey"

# SqlOps
export PATH="$PATH:$HOME/bin/sqlops-linux-x64/"

export PATH=$PATH:$HOME/bin

source "$HOME/bin/azure-cli/az.completion"

# entr
export PATH=$PATH:$HOME/bin/entr/bin:$PATH

# code climate
export PATH=$HOME/bin/usr/local/bin/:$PATH

# intellij idea
export PATH=$HOME/bin/idea-IU-182.4505.22/bin:$PATH

# pyenv
export PYENV_ROOT="$HOME/.pyenv"
export PYTHON_CONFIGURE_OPTS="--enable-shared"
export PATH="$PYENV_ROOT/bin:$PATH"
if command -v pyenv 1>/dev/null 2>&1; then
  eval "$(pyenv init -)"
fi

# AWS
complete -C "$HOME/.local/bin/aws_completer" aws

# tabtab source for slss package
# uninstall by removing these lines or running `tabtab uninstall slss`
[ -f /home/armonge/workspace/mediarain/nestle-voxa-starterkit/node_modules/tabtab/.completions/slss.bash ] && . /home/armonge/workspace/mediarain/nestle-voxa-starterkit/node_modules/tabtab/.completions/slss.bash
